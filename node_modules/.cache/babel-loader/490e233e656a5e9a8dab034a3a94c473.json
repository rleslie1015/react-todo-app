{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\nahmu\\\\myprojects\\\\react-todo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\nahmu\\\\myprojects\\\\react-todo-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport TodoList from \"./components/TodoList\";\nimport TodoForm from './components/TodoForm';\nconst todoData = [{\n  task: 'Organize Garage',\n  id: 1528817077286,\n  completed: false\n}, {\n  task: 'Bake Cookies',\n  id: 1528817084358,\n  completed: false\n}];\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.addTodo = e => {\n      e.preventDefault();\n      const newTodo = {\n        task: this.state.todo,\n        completed: false,\n        id: Date.now()\n      };\n      this.setState({\n        todos: [...this.state.todos, newTodo],\n        todo: ''\n      });\n      this.updateLocalStorage();\n    };\n\n    this.clearCompleted = e => {\n      e.preventDefault();\n      let todos = this.state.todos.filter(todo => !todo.completed);\n      this.setState({\n        todos\n      });\n    };\n\n    this.toggleCompleted = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (id === todo.id) {\n            return _objectSpread({}, todo, {\n              completed: !todo.completed\n            });\n          } else {\n            return todo;\n          }\n        })\n      });\n    };\n\n    this.updateLocalStorage = () => {\n      localStorage.setItem(\"todos\", JSON.stringify(this.props.todos));\n    };\n\n    this.setLocalStorageToState = () => {\n      this.props.todos && this.setState({\n        todos: JSON.parse(localStorage.getItem(\"todos\"))\n      });\n    };\n\n    this.state = {\n      todos: todoData,\n      todo: ''\n    };\n  } //for setting what user inputs in the TodoForm to state \n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"s\", React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Welcome to your Todo App!\"), React.createElement(TodoList, {\n      todos: this.state.todos,\n      toggleCompleted: this.toggleCompleted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(TodoForm, {\n      value: this.state.todo,\n      handleChange: this.handleChange,\n      handleOnSubmit: this.addTodo,\n      clearCompleted: this.clearCompleted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\nahmu\\myprojects\\react-todo-app\\src\\App.js"],"names":["React","TodoList","TodoForm","todoData","task","id","completed","App","Component","constructor","handleChange","e","setState","target","name","value","addTodo","preventDefault","newTodo","state","todo","Date","now","todos","updateLocalStorage","clearCompleted","filter","toggleCompleted","map","localStorage","setItem","JSON","stringify","props","setLocalStorageToState","parse","getItem","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport TodoList from \"./components/TodoList\";\r\nimport TodoForm from './components/TodoForm';\r\n\r\nconst todoData = [\r\n  {\r\n    task: 'Organize Garage',\r\n    id: 1528817077286,\r\n    completed: false\r\n  },\r\n  {\r\n    task: 'Bake Cookies',\r\n    id: 1528817084358,\r\n    completed: false\r\n  }\r\n];\r\n\r\nclass App extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      todos: todoData,\r\n      todo: ''\r\n    };\r\n  }\r\n//for setting what user inputs in the TodoForm to state \r\n  handleChange=(e)=>{\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n addTodo=(e) => {\r\n   e.preventDefault();\r\n   const newTodo = { task: this.state.todo, completed: false, id: Date.now() };\r\n    this.setState({ \r\n      todos: [...this.state.todos, newTodo], \r\n      todo: '' \r\n    });\r\n    this.updateLocalStorage();\r\n }\r\n\r\n  clearCompleted = e => {\r\n    e.preventDefault();\r\n    let todos = this.state.todos.filter(todo => !todo.completed);\r\n    this.setState({todos});\r\n  }\r\n\r\n  toggleCompleted = (id) => {\r\n    this.setState({\r\n      todos: this.state.todos.map(todo => {\r\n        if (id === todo.id){\r\n          return {...todo, completed: !todo.completed};\r\n        } else {\r\n          return todo;\r\n        }\r\n      })\r\n    });\r\n  }\r\n  \r\n  updateLocalStorage = () => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(this.props.todos))\r\n  };\r\n  \r\n  setLocalStorageToState = () => {\r\n    this.props.todos && this.setState({\r\n          todos: JSON.parse(localStorage.getItem(\"todos\"))\r\n        })\r\n      }\r\n \r\n  render() {\r\n    return (\r\n      <div>s\r\n        <h2>Welcome to your Todo App!</h2>\r\n        <TodoList todos={this.state.todos} toggleCompleted={this.toggleCompleted} />\r\n        <TodoForm \r\n          value={this.state.todo}\r\n          handleChange={this.handleChange}\r\n          handleOnSubmit={this.addTodo}\r\n          clearCompleted={this.clearCompleted}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}