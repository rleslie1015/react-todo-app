{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nahmu\\\\myprojects\\\\react-todo-app\\\\src\\\\components\\\\TodoList.js\";\nimport React from \"react\";\nimport Todo from './Todo';\nimport JsApiReporter from \"jest-jasmine2/build/jasmine/JsApiReporter\";\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateSearch = e => {\n      this.setState({\n        [e.target.name]: e.target.value.substr(0, 10)\n      }); // limits the input to 10 chars\n    };\n\n    this.state = {\n      search: '',\n      todos: props.todos\n    };\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem('todos', JSON.stringify());\n  }\n\n  render() {\n    let filteredTodos = this.state.todos.filter(todo => {\n      return todo.task.toLowerCase().indexOf(this.state.search) !== -1;\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"search\",\n      placeholder: \"search\",\n      value: this.state.search,\n      onChange: this.updateSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), filteredTodos.map(todo => React.createElement(Todo, {\n      key: todo.id,\n      todo: todo,\n      toggleCompleted: this.props.toggleCompleted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:\\Users\\nahmu\\myprojects\\react-todo-app\\src\\components\\TodoList.js"],"names":["React","Todo","JsApiReporter","TodoList","Component","constructor","props","updateSearch","e","setState","target","name","value","substr","state","search","todos","componentWillUpdate","nextProps","nextState","localStorage","setItem","JSON","stringify","render","filteredTodos","filter","todo","task","toLowerCase","indexOf","map","id","toggleCompleted"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,2CAA1B;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQlBC,YARkB,GAQFC,CAAD,IAAO;AAClB,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE,KAAT,CAAeC,MAAf,CAAsB,CAAtB,EAAyB,EAAzB;AAAnB,OAAd,EADkB,CAC+C;AACpE,KAViB;;AAEd,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,KAAK,EAAEV,KAAK,CAACU;AAFJ,KAAb;AAIH;;AAMDC,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACtCC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,EAA9B;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAIC,aAAa,GAAG,KAAKX,KAAL,CAAWE,KAAX,CAAiBU,MAAjB,CACfC,IAAD,IAAU;AACN,aAAOA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,OAAxB,CAAgC,KAAKhB,KAAL,CAAWC,MAA3C,MAAuD,CAAC,CAA/D;AACH,KAHe,CAApB;AAMA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,WAAW,EAAC,QAHhB;AAII,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,MAJtB;AAKI,MAAA,QAAQ,EAAE,KAAKR,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EASCkB,aAAa,CAACM,GAAd,CAAkBJ,IAAI,IAAG,oBAAC,IAAD;AACtB,MAAA,GAAG,EAAEA,IAAI,CAACK,EADY;AAEtB,MAAA,IAAI,EAAEL,IAFgB;AAGtB,MAAA,eAAe,EAAE,KAAKrB,KAAL,CAAW2B,eAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,CATD,CADJ;AAkBH;;AA1CkC;;AA6CvC,eAAe9B,QAAf","sourcesContent":["import React from \"react\";\r\nimport Todo from './Todo';\r\nimport JsApiReporter from \"jest-jasmine2/build/jasmine/JsApiReporter\";\r\n\r\nclass TodoList extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n            todos: props.todos\r\n        }\r\n    }\r\n\r\n    updateSearch = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value.substr(0, 10) }) // limits the input to 10 chars\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n        localStorage.setItem('todos', JSON.stringify())\r\n    }\r\n\r\n    render(){\r\n        let filteredTodos = this.state.todos.filter(\r\n            (todo) => {\r\n                return todo.task.toLowerCase().indexOf(this.state.search) !== -1;\r\n            }\r\n        );\r\n\r\n        return(\r\n            <div> \r\n                <input \r\n                    type=\"text\"\r\n                    name=\"search\"\r\n                    placeholder=\"search\"\r\n                    value={this.state.search}\r\n                    onChange={this.updateSearch}\r\n                />\r\n            \r\n            {filteredTodos.map(todo =><Todo \r\n                key={todo.id} \r\n                todo={todo} \r\n                toggleCompleted={this.props.toggleCompleted} \r\n                />)} \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}