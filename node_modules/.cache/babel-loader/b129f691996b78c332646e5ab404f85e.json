{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\nahmu\\\\myprojects\\\\react-todo-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n//for setting what user inputs in the TodoForm to state \nexport const handleChange = e => {\n  this.setState({\n    [e.target.name]: e.target.value\n  });\n};\nexport const addTodo = e => {\n  e.preventDefault();\n  const newTodo = {\n    task: this.state.todo,\n    completed: false,\n    id: Date.now()\n  };\n  this.updateLocalStorage();\n  this.setState({\n    todos: [...this.state.todos, newTodo],\n    todo: ''\n  });\n};\nexport const clearCompleted = e => {\n  e.preventDefault();\n  let todos = this.state.todos.filter(todo => !todo.completed);\n  this.setState({\n    todos\n  });\n};\nexport const toggleCompleted = id => {\n  this.setState({\n    todos: this.state.todos.map(todo => {\n      if (id === todo.id) {\n        return _objectSpread({}, todo, {\n          completed: !todo.completed\n        });\n      } else {\n        return todo;\n      }\n    })\n  });\n};\nexport const updateLocalStorage = () => {\n  console.log(\"update\", this.state.todos);\n  localStorage.setItem(\"todos\", JSON.stringify(this.state.todos));\n};","map":{"version":3,"sources":["C:\\Users\\nahmu\\myprojects\\react-todo-app\\src\\components\\TodoFunc.js"],"names":["handleChange","e","setState","target","name","value","addTodo","preventDefault","newTodo","task","state","todo","completed","id","Date","now","updateLocalStorage","todos","clearCompleted","filter","toggleCompleted","map","console","log","localStorage","setItem","JSON","stringify"],"mappings":";AAAA;AACA,OAAO,MAAMA,YAAY,GAAEC,CAAD,IAAK;AAC3B,OAAKC,QAAL,CAAc;AAAE,KAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,GAAd;AACD,CAFI;AAIN,OAAO,MAAMC,OAAO,GAAEL,CAAD,IAAO;AAC1BA,EAAAA,CAAC,CAACM,cAAF;AACA,QAAMC,OAAO,GAAG;AAAEC,IAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,IAAnB;AAAyBC,IAAAA,SAAS,EAAE,KAApC;AAA2CC,IAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL;AAA/C,GAAhB;AACA,OAAKC,kBAAL;AAEC,OAAKd,QAAL,CAAc;AACZe,IAAAA,KAAK,EAAE,CAAC,GAAG,KAAKP,KAAL,CAAWO,KAAf,EAAsBT,OAAtB,CADK;AAEZG,IAAAA,IAAI,EAAE;AAFM,GAAd;AAKF,CAVM;AAaP,OAAO,MAAMO,cAAc,GAAGjB,CAAC,IAAI;AAChCA,EAAAA,CAAC,CAACM,cAAF;AACA,MAAIU,KAAK,GAAG,KAAKP,KAAL,CAAWO,KAAX,CAAiBE,MAAjB,CAAwBR,IAAI,IAAI,CAACA,IAAI,CAACC,SAAtC,CAAZ;AACA,OAAKV,QAAL,CAAc;AAACe,IAAAA;AAAD,GAAd;AAED,CALK;AAOP,OAAO,MAAMG,eAAe,GAAIP,EAAD,IAAQ;AACpC,OAAKX,QAAL,CAAc;AACZe,IAAAA,KAAK,EAAE,KAAKP,KAAL,CAAWO,KAAX,CAAiBI,GAAjB,CAAqBV,IAAI,IAAI;AAClC,UAAIE,EAAE,KAAKF,IAAI,CAACE,EAAhB,EAAmB;AACjB,iCAAWF,IAAX;AAAiBC,UAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAAlC;AACD,OAFD,MAEO;AACL,eAAOD,IAAP;AACD;AACF,KANM;AADK,GAAd;AAUD,CAXK;AAaN,OAAO,MAAMK,kBAAkB,GAAG,MAAM;AACtCM,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKb,KAAL,CAAWO,KAAjC;AACAO,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAe,KAAKjB,KAAL,CAAWO,KAA1B,CAA9B;AACD,CAHM","sourcesContent":["//for setting what user inputs in the TodoForm to state \r\nexport const handleChange=(e)=>{\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n export const addTodo=(e) => {\r\n   e.preventDefault();\r\n   const newTodo = { task: this.state.todo, completed: false, id: Date.now() };\r\n   this.updateLocalStorage();\r\n   \r\n    this.setState({ \r\n      todos: [...this.state.todos, newTodo], \r\n      todo: '' \r\n    });\r\n    \r\n }\r\n\r\n\r\n export const clearCompleted = e => {\r\n    e.preventDefault();\r\n    let todos = this.state.todos.filter(todo => !todo.completed);\r\n    this.setState({todos});\r\n    \r\n  }\r\n\r\n export const toggleCompleted = (id) => {\r\n    this.setState({\r\n      todos: this.state.todos.map(todo => {\r\n        if (id === todo.id){\r\n          return {...todo, completed: !todo.completed};\r\n        } else {\r\n          return todo;\r\n        }\r\n      })\r\n    });\r\n    \r\n  }\r\n\r\n  export const updateLocalStorage = () => {\r\n    console.log(\"update\", this.state.todos);\r\n    localStorage.setItem(\"todos\", JSON.stringify(this.state.todos))\r\n  };\r\n"]},"metadata":{},"sourceType":"module"}